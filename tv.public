/***** switch to -*-C-*- mode please */

typedef struct tn TN;
typedef struct xpvtv XPVTV;
typedef struct tce TCE;
typedef struct xpvtc XPVTC;

/*           passed by    stored by
	   ----------- ------------
  KEY_T          value        value
  DATA_T           ref        value
*/

/*PUBLIC MACROS*/
#if !defined(TcTV)
#define TcTV(tc)		(tc)->xtc_tv
#endif

#define TvMAX(tv)		(tv)->xtv_max

#if defined(TV_CACHE_TREEFILL)
#define TvFILL(tv)		(TvROOT(tv)? TnTREEFILL(TvROOT(tv)) : 0)
#else
#define TvFILL(tv)		(tv)->xtv_fill
#endif


/*STRUCTURE DECLARATIONS*/

struct tn {
#ifdef TV_KEYD
  TnKEY_T	tn_key[TnWIDTH];
#endif
  TnDATA_T	tn_data[TnWIDTH];
  struct tn *	tn_sub [TnWIDTH + 1];  /*subtrees are between the keys*/
#ifdef TV_CACHE_TREEFILL
  I32		tn_treefill;
#endif
  I16		tn_fill;
#ifdef TV_PAD32
  I16		_pad1;
#endif
};

struct xpvtv {
  TN		*xtv_root;
  U32		xtv_max;
  U32		xtv_version;
#ifndef TV_CACHE_TREEFILL
  I32		xtv_fill;
#endif
#ifdef TV_TEST
  U32		xtv_flags;
#endif
};

struct tce {
  TN		*tce_tn;
  I16		tce_slot;
  I16		tce_flags;
};

struct xpvtc {
#ifdef TV_TEST
  XPVTV		*xtc_tv;
  U32		xtc_flags;
#endif
  U32		xtc_version;
  TCE		*xtc_path;
#ifdef TV_CACHE_TREEFILL
  I32		xtc_pos;
#endif
  I16		xtc_fill;
  I16		xtc_max;
};

/*XPVTV*/
XPVTV *init_tv(XPVTV *tv);
void free_tv(XPVTV *tv);
void tv_clear(XPVTV *tv);
void tv_insert(XPVTV *tv, TnKEY_T key, TnDATA_T *data);
void tv_delete(XPVTV *tv, TnKEY_T key);
int tv_fetch(XPVTV *tv, TnKEY_T, TnDATA_T *out);

/*XPVTC*/
/*************************************** TV REFCNTS ARE NOT MY PROBLEM */
XPVTC *init_tc(XPVTC *tc, XPVTV *tv);
void free_tc(XPVTC *tc);
void tc_refocus(XPVTC *tc, XPVTV *tv);
/*************************************** TV REFCNTS ARE NOT MY PROBLEM */
void tc_step(XPVTC *tc, I32 delta);
#ifdef TV_KEYD
int tc_seek(XPVTC *tc, TnKEY_T key);
#endif
TnKEY_T tc_fetch(XPVTC *tc, TnDATA_T *out);
void tc_store(XPVTC *tc, TnDATA_T *data);
void tc_delete(XPVTC *tc);
void tc_moveto(XPVTC *tc, I32 xto);
char *tc_where(XPVTC *tc, int *len);
#if defined(TV_CACHE_TREEFILL)
I32 tc_pos(XPVTC *tc);
#endif

#if defined(TV_TEST)
void tc_dump(XPVTC *tc);
void tv_dump(XPVTV *tv);
#endif


/*(SEMI)PRIVATE MACROS*/
#define TvROOT(tv)		(tv)->xtv_root
#if defined(TV_CACHE_TREEFILL)
#define TnTREEFILL(tn)		(tn)->tn_treefill
#else
#define TnTREEFILL(tn)		(0)
#endif

